buildscript {
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobuf_gradle_plugin_version"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.google.protobuf' version "$protobuf_gradle_plugin_version"
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.jpa' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'org.jetbrains.kotlin.kapt' version "$kotlin_version"
    id 'maven-publish'
    id 'org.jlleitschuh.gradle.ktlint' version '9.4.0'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'

group 'lip17.base_grpc_server'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation group: 'io.grpc', name: 'grpc-all', version: "$grpc_version"
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: "$protobuf_version"
    implementation group: 'com.google.api.grpc', name: 'proto-google-common-protos', version: '2.0.0'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.2'
    
    // grpc kotlin
    implementation group: 'io.grpc', name: 'grpc-kotlin-stub', version: '0.1.3'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.7'

    implementation group: 'com.github.marcoferrer.krotoplus', name: 'kroto-plus-coroutines', version: "$krotoplus_version"
    implementation group: 'lip17', name: 'protobuf-base_grpc_service', version: '0.0.11'

    // vertex core
    implementation group: 'io.vertx', name: 'vertx-core', version: "${vertx_version}"
    implementation group: 'io.vertx', name: 'vertx-lang-kotlin', version: "${vertx_version}"

    // vertx coroutine
    implementation group: 'io.vertx', name: 'vertx-lang-kotlin-coroutines', version: "${vertx_version}"

    // service proxy
    implementation group: 'io.vertx', name: 'vertx-service-proxy', version: "${vertx_version}"
    compileOnly group: 'io.vertx', name: 'vertx-codegen', version: "${vertx_version}"
    kapt("io.vertx:vertx-codegen:3.9.3:processor") // in plugin, include kapt, with this and codegen dependency to generate proxy class

}

mainClassName = "Main"
application {
    mainClassName(mainClassName)
}

test {
    useJUnitPlatform()
}
